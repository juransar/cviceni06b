<?php

require_once '../bootstrap.php';

use Tester\Assert;
use Tester\Environment;
use Nette\Database\Connection;
use Nette\Database\Structure;
use Nette\Database\Context;
use Nette\Caching\Storages\DevNullStorage;
use App\Model\BaseModel;
use App\Model\UtilityModel;
use Tester\TestCase;
/**
 * Class UtilityModelTest
 * @testCase
 * @dataProvider ../database.ini
 */
class UtilityModelTest extends TestCase
{
    /** @var Context */
    private $database;
    /** @var BaseModel */
    private $BaseModel;
    /** @var \App\Model\UtilityModel */
    private $utilityModel;
    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $args = Environment::loadData();
        $connection = new Connection($args['dsn'], $args['user'], $args['password']);
        $this->database = new Context($connection, new Structure($connection, new DevNullStorage()));
        $this->utilityModel = new UtilityModel(new \App\Model\PidModel($this->database));
    }

    public function testIsCorrectPid() {
        $pid1='9554190174';
        $res=$this->utilityModel->isCorrectPid($pid1);
        Assert::false($res);
        Assert::false($this->utilityModel->isCorrectPid('95541901746'));
        Assert::false($this->utilityModel->isCorrectPid("955419017a"));
        $pid2='9554190173';
        $res=$this->utilityModel->isCorrectPid($pid2);
        Assert::true($res);

    }

}

# SpuÅ¡tÄ›nÃ­ testovacÃ­ch metod
$testCase = new UtilityModelTest;
$testCase->run();